{% extends "client/pages/profile/index.html.twig" %}


{% block stylesheets %}
   

{% endblock %}

{% block content %}
    
    <div class="container table-container " style="width: 50%;">
        <h3>Track Order</h3>
        <div class="row">
            <div class="col-xs-12">
                {{ form_start(form, {'attr': {'id': 'track-order-form'}}) }}
                    <div class="checkout_info coupon_info">
                        {{ form_widget(form.code, {attr: {class: 'form-control'}}) }}
                        <div class="form_group group_3 mt-3">
                            <button class="btn btn-lg btn-primary" type="submit">
                                Track order
                            </button>
                        </div>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    document.getElementById('track-order-form').addEventListener('submit', function(event) {
        event.preventDefault();
        var form = event.target;
        var formData = new FormData(form);

        fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            let message = data.message;
            if (data.status === 'pending') {
                const createdAt = new Date(data.createdAt);
                const deliveryDate = new Date(createdAt);
                deliveryDate.setDate(createdAt.getDate() + 7);

                const currentDate = new Date();
                const timeDiff = deliveryDate - currentDate;
                const daysRemaining = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

                message += ' (Status: ' + data.status + '). Days remaining for delivery: ' + daysRemaining;
            } else {
                message += ' (Status: ' + data.status + ')';
            }

            Swal.fire({
                title: 'Order Status',
                html: '<p>' + message + '</p>',
                icon: data.status === 'not found' ? 'error' : 'success',
                background: '#f0f0f0',
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ok',
                customClass: {
                    popup: 'custom-swal-popup',
                    title: 'custom-swal-title',
                    content: 'custom-swal-content',
                    confirmButton: 'custom-swal-confirm-button'
                }
            });
        })
        .catch(error => {
            Swal.fire({
                title: 'Error',
                text: 'An error occurred while tracking the order.',
                icon: 'error',
                background: '#f0f0f0',
                confirmButtonColor: '#3085d6',
                customClass: {
                    popup: 'custom-swal-popup',
                    title: 'custom-swal-title',
                    content: 'custom-swal-content',
                    confirmButton: 'custom-swal-confirm-button'
                }
            });
        });
    });
</script>

{% endblock %}