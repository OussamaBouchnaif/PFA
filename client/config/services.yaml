# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    pagination: '%env(int:PAGINATION)%'
    endpoint_minio: '%env(ENDPOINT_MINIO)%'

services:
    
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            
    App\EntityListener\:
        resource: "../src/EntityListener/"
        tags: ["doctrine.orm.entity_listener"]
    
    App\Cart\Handler\CartStorageInterface:
        alias: App\Cart\Handler\CartSessionStorage

    App\Cart\Denormalizer\AbstractCartNormalizer:
        alias: App\Cart\Denormalizer\CartSessionNormalizer
    
    App\Reduction\Manager\Strategy\AbstractReductionStrategy:
        alias: App\Reduction\Manager\Strategy\ReductionwithPercentage
    
    App\Reduction\Applier\AbstractDiscountApplier:
        alias: App\Reduction\Applier\DefaultApplier
    
    App\Twig\MinioExtension:
        arguments:
            $endpointMinio: '%env(ENDPOINT_MINIO)%'
    

    App\Payment\Strategy\PaypalePayment:
        tags:
            - { name: 'app.payment_processor' }

    App\Payment\Strategy\CreditCartPayment:
        tags:
            - { name: 'app.payment_processor' }

    App\Payment\PaymentManager:
        arguments:
            $paymentProcessors: !tagged_iterator app.payment_processor

    
    App\EventListener\CameraStockListener:
        tags:
           - { name: 'kernel.event_listener', event: 'camera.stock', method: 'onOrderPlaced' }

    App\EventListener\VoucherUsedListener:
        tags:
           - { name: 'kernel.event_listener', event: 'voucher.used', method: 'onVoucherUsed' }

    App\Mail\Notifier:
        arguments:
            $Entreprise: '%env(EMAIL)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
