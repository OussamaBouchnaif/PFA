{% extends 'base.html.twig' %}


{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+WyVQZlZl5E/V7hRTtXxpgO9RY" crossorigin="anonymous">
	<link rel="stylesheet" type="text/css" href="https://unpkg.com/tableexport@5.0.2/dist/css/tableexport.min.css">
	<style>
		#myTable {
			border: 1px white;
		}
		tr {
			border: 1px white;

		}
		.horizontal-buttons {
			display: flex;
			align-items: center;
		}

		.horizontal-buttons .dropdown-item,
		.horizontal-buttons .text-muted {
			margin-right: 10px; /* Adjust spacing between buttons */
		}
		.custom-header-bg {
			background-color: #f8f9fa; /* Custom header background color */
		}

		.custom-header {
			color: #495057; /* Custom header text color */
		}

		.price-cell {
			color: #28a745; /* Price cell text color */
		}

		.category-cell {
			color: #007bff; /* Category cell text color */
		}


		.horizontal-buttons .dropdown-item:hover,
		.horizontal-buttons .text-muted:hover {
			color: #0056b3; /* Change color on hover */
		}

		.dropdown-item i {
			color: #777; /* Default icon color */
		}

		/* Hover effect for table rows */
		tbody tr:hover {
			background-color: #f0f0f0; /* Change background color on hover */
		}

		/* Add spacing between table rows */
		tbody tr:not(:last-child) {
			margin-bottom: 10px; /* Adjust spacing between rows */
		}

		.formCost input {
			width: 250px; /* Réglez la largeur des champs de date selon vos préférences */
		}
	</style>
{% endblock %}

{% block body %}
	<div id="layout-wrapper">


		<div class="main-content">

			<div class="page-content">
				<div
					class="container-fluid">

					<!-- start page title -->
					<div class="row">
						<div class="col-12">
							<div class="page-title-box d-sm-flex align-items-center justify-content-between">
								<h4 class="mb-sm-0">Reductions</h4>
								<div class="page-title-right">
									<ol class="breadcrumb m-0">
										<li class="breadcrumb-item">
											<a href="javascript: void(0);">Ecommerce</a>
										</li>
										<li class="breadcrumb-item active">Reduction</li>
									</ol>
								</div>

							</div>
						</div>
					</div>
					<!-- end page title -->

					<div class="row">
						<div class="col-xl-3 col-lg-4">
							<div class="card">
								<div class="card-header">
									<div class="d-flex mb-3">
										<div class="flex-grow-1">
											<h5 class="fs-16">Filters</h5>
										</div>
										<div class="flex-shrink-0">
											<a class="text-decoration-underline" id="clearall" onclick="clearAllFilters()">Clear All</a>
										</div>

									</div>
								</div>

								<div class="accordion accordion-flush filter-accordion">

									<div class="card-body border-bottom">
										<div>
											<label for="PourcentageSelect">Pourcentage Select:</label>
											<select class="form-control" id="PourcentageSelect" placeholder="Sélectionnez un pourcentage">
												<option disabled selected hidden>Sélectionnez un poucentage</option>
												{% for reduction in reductions %}
													<option value="{{ reduction.poucentage}}">{{ reduction.poucentage }}</option>
												{% endfor %}
											</select>

									</div>
								</div>

								<div class="card-body border-bottom">
									<p class="text-muted text-uppercase fs-13 fw-medium mb-4">last</p>

									<div id="product-price-range"></div>
									<div class="formCost mt-3">
										<div class="d-flex flex-column gap-2 align-items-start">
											<p class="text-muted text-uppercase fs-13 fw-medium mb-0">Date de début</p>
											<input class="form-control form-control-sm" type="date" id="minLast"/>
										</div>

										<div class="d-flex flex-column gap-2 align-items-start">
											<p class="text-muted text-uppercase fs-13 fw-medium mb-0">Date fin</p>
											<input class="form-control form-control-sm" type="date" id="maxLast"/>
										</div>
									</div>

								</div>
							</div>
						</div>
					</div>
					<div class="col-xl-9 col-lg-8">
						<div>
							<div class="card">
								<div class="card-header border-0">
									<div class="row g-4">
										<div class="col-sm-auto">
											<div>
												<a href="{{ path('reduction_add') }}" class="btn btn-success" id="addproduct-btn">
													<i class="ri-add-line align-bottom me-1"></i>
													Add reduction</a>
												<button type="button" class="btn btn-primary" onclick="confirmAction('print')">
                                                    <i class="ri-printer-line align-middle me-1"></i>
                                                    Imprimer tableau
                                                </button>

                                                <button type="button" class="btn btn-info" onclick="confirmAction('export')">
                                                    <i class="ri-file-excel-line align-middle me-1"></i>
                                                    Exporter Excel
                                                </button>

											</div>
										</div>
										<div class="col-sm"></div>
									</div>
								</div>


								<!-- end card header -->
								<div class="card-body">

									<table id="myTable" class="table">
										<thead>
											<tr class="align-middle custom-header-bg">
												<th class="custom-header text-center">Description</th>
												<th class="custom-header text-center">Pourcentage</th>
												<th class="custom-header text-center">Date de début</th>
												<th class="custom-header text-center">Date de fin</th>
												<th class="custom-header text-center">prix</th>
												<th class="custom-header text-center">Action</th>

											</tr>
										</thead>
										<tbody>
											{% for reduction in reductions %}
												<tr>
													<td class="align-middle text-center">{{ reduction.description }}</td>
													<td class="align-middle text-center price-cell">{{ reduction.poucentage }}</td>
													<td class="align-middle text-center">{{ reduction.dateDebut ? reduction.dateDebut|date('Y-m-d') : '' }}</td>
													<td class="align-middle text-center">{{ reduction.dateFin ? reduction.dateFin|date('Y-m-d') : '' }}</td>
													<td class="align-middle text-center price-cell">{{ reduction.prix }}</td>

													<td class="text-center align-middle horizontal-buttons">
														<button class="dropdown-item text-muted" onclick="confirmDelete('{{ path('reduction_delete',{id:reduction.id}) }}')">
                                                            <i class="ri-delete-bin-line align-bottom me-2"></i>
                                                        </button>

														<a class="text-muted" href="{{ path('reduction_edit',{id:reduction.id}) }}">
															<i class="ri-pencil-line align-bottom me-2"></i>
														</a>
													</td>
												</tr>
											{% endfor %}
										</tbody>
									</table>


									<div class="tab-content text-muted">
										<div class="tab-pane active" id="productnav-all" role="tabpanel">
											<div id="table-product-list-all" class="table-card gridjs-border-none"></div>
										</div>
										<!-- end tab pane -->

										<div class="tab-pane" id="productnav-published" role="tabpanel">
											<div id="table-product-list-published" class="table-card gridjs-border-none"></div>
										</div>
										<!-- end tab pane -->

										<div class="noDataMessage" id="productnav-draft" role="tabpanel">
											<div class="py-4 text-center" id="noDataMessage" style="display: none;">
												<lord-icon src="https://cdn.lordicon.com/msoeawqm.json" trigger="loop" colors="primary:#405189,secondary:#0ab39c" style="width:72px;height:72px"></lord-icon>
												<h5 class="mt-4">Désolé ! Aucun résultat trouvé</h5>
											</div>
										</div>
										<!-- end tab pane -->
									</div>
									<!-- end tab content -->

								</div>
								<!-- end card body -->
							</div>
							<!-- end card -->
						</div>
					</div>
					<!-- end col -->
				</div>
				<!-- end row -->

			</div>
			<!-- container-fluid -->
		</div>
		<!-- End Page-content -->

	</div>
</div></div>{% endblock %}
{% block javascripts %}
{{ parent() }}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://unpkg.com/tableexport@5.0.2/dist/js/tableexport.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js">
<script>
let table = null;
$(document).ready(function () {
// Vérifier si DataTables a déjà été initialisé sur la table


// Autres fonctionnalités de votre script...
});


function printTable() {
    var printWindow = window.open('', '_blank');
    printWindow.document.open();
    printWindow.document.write('<html><head><title>Print Table</title>');
    printWindow.document.write('<style>');
    printWindow.document.write('table {margin: auto; border-collapse: collapse; width: 80%;}');
    printWindow.document.write('th, td {border: 1px solid black; padding: 8px;}');
    printWindow.document.write('th {font-weight: bold; text-align: center;}');
    printWindow.document.write('</style>');
    printWindow.document.write('</head><body>');
    printWindow.document.write('<table>');
    printWindow.document.write('<thead>');
    printWindow.document.write('<tr>');
    printWindow.document.write('<th>Description</th>');
    printWindow.document.write('<th>Pourcentage</th>');
    printWindow.document.write('<th>Date de début</th>');
    printWindow.document.write('<th>Date de fin</th>');
    printWindow.document.write('</tr>');
    printWindow.document.write('</thead>');
    printWindow.document.write('<tbody>');

    var tableRows = document.getElementById('myTable').querySelectorAll('tr');
    for (var i = 0; i < tableRows.length; i++) {
        var row = tableRows[i];
        var rowData = row.querySelectorAll('td');
        if (rowData.length > 0) {
            printWindow.document.write('<tr>');
            for (var j = 0; j < rowData.length; j++) {
                if (j !== rowData.length - 1) {
                    printWindow.document.write('<td>' + rowData[j].innerText + '</td>');
                }
            }
            printWindow.document.write('</tr>');
        }
    }

    printWindow.document.write('</tbody>');
    printWindow.document.write('</table>');
    printWindow.document.write('</body></html>');
    printWindow.document.close();
    printWindow.print();
}

function exportToCSV() { 
    var table = document.getElementById('myTable');
    var rows = table.querySelectorAll('tbody tr'); 
    var csvData = [];

    var headerRow = ['Description', 'Pourcentage', 'Date de début', 'Date de fin'];
    csvData.push(headerRow.join(';'));

    for (var i = 0; i < rows.length; i++) {
        var row = rows[i];
        var rowData = [];
        var cols = row.querySelectorAll('td');

        for (var j = 0; j < cols.length; j++) {
            rowData.push(cols[j].innerText);
        }

        csvData.push(rowData.join(';'));
    }

    var csvContent = csvData.join('\n');
    var blob = new Blob([csvContent], {type: 'text/csv;charset=utf-8;'});
    var url = URL.createObjectURL(blob);
    var downloadLink = document.createElement('a');
    downloadLink.href = url;
    downloadLink.setAttribute('download', 'reductions.csv');
    document.body.appendChild(downloadLink);
    downloadLink.click();
    document.body.removeChild(downloadLink);
}



document.addEventListener('DOMContentLoaded', function () { // Sélectionnez l'élément de liste déroulante des pourcentages
var pourcentageSelect = document.getElementById('PourcentageSelect');

// Ajoutez un écouteur d'événements de changement à l'élément de liste déroulante
pourcentageSelect.addEventListener('change', function () { // Récupérez la valeur sélectionnée dans la liste déroulante
var selectedPourcentage = pourcentageSelect.value;

// Appelez la fonction pour filtrer la table par pourcentage
filterTableByPourcentage(selectedPourcentage);
});
});

function filterTableByPourcentage(pourcentage) { // Récupérer toutes les lignes de la table
var tableRows = document.querySelectorAll('#myTable tbody tr');

// Parcourir toutes les lignes
tableRows.forEach(function (row) { // Récupérer la cellule de pourcentage dans la ligne
var pourcentageCell = row.cells[1].textContent.trim();

// Vérifier si le pourcentage correspond à celui sélectionné ou si le pourcentage sélectionné est vide
if (pourcentage === '' || pourcentageCell === pourcentage) { // Afficher la ligne
row.style.display = '';
} else { // Masquer la ligne
row.style.display = 'none';
}
});
}






document.addEventListener('DOMContentLoaded', function () { // Fonction pour filtrer par date de début et de fin
function filterByDates() {
var minDate = new Date(document.getElementById('minLast').value);
var maxDate = new Date(document.getElementById('maxLast').value);
var tableRows = document.querySelectorAll('#myTable tbody tr');

tableRows.forEach(function (row) {
var rowDateDebut = new Date(row.cells[2].innerText); // Cellule contenant la date de début
var rowDateFin = new Date(row.cells[3].innerText);
// Cellule contenant la date de fin

// Afficher ou masquer la ligne en fonction des critères de filtrage
if ((isNaN(minDate.getTime()) || rowDateDebut >= minDate) && (isNaN(maxDate.getTime()) || rowDateFin <= maxDate)) {
row.style.display = '';
} else {
row.style.display = 'none';
}
});
}

// Ajouter des écouteurs d'événements aux champs de saisie de date pour déclencher le filtrage
document.getElementById('minLast').addEventListener('input', filterByDates);
document.getElementById('maxLast').addEventListener('input', filterByDates);

// Appeler la fonction de filtrage une fois au chargement de la page pour afficher initialement toutes les lignes
filterByDates();
});
document.addEventListener('DOMContentLoaded', function () { // Fonction pour effacer tous les filtres et afficher toutes les lignes
function clearAllFilters() { // Afficher toutes les lignes du tableau
var tableRows = document.querySelectorAll('#myTable tbody tr');
tableRows.forEach(function (row) {
row.style.display = '';
});
}

// Ajouter un écouteur d'événements au bouton "Clear All"
document.getElementById('clearall').addEventListener('click', clearAllFilters);


        
});
</script>

<script>
    function confirmDelete(deleteUrl) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Redirection vers l'URL de suppression si confirmé
                window.location.href = deleteUrl;
            }
        });
    }
</script>
<script>
function confirmAction(action) {
    let title = '';
    let confirmButtonText = '';

    // Définir le titre et le texte en fonction de l'action
    if (action === 'print') {
        title = 'Imprimer';
        confirmButtonText = 'Imprimer';
    } else if (action === 'export') {
        title = 'Export Excel';
        confirmButtonText = 'Exporter';
    }

    // Afficher la boîte de dialogue SweetAlert
    Swal.fire({
        title: title,
        text: `Êtes-vous sûr de vouloir ${action === 'print' ? 'imprimer' : 'exporter vers Excel'} ces données?`,
        icon: 'info',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: confirmButtonText,
        cancelButtonText: 'Annuler'
    }).then((result) => {
        // Si confirmé, exécuter l'action correspondante
        if (result.isConfirmed) {
            if (action === 'print') {
                printTable(); // Appeler la fonction d'impression
            } else if (action === 'export') {
                exportToCSV(); // Appeler la fonction d'exportation vers Excel
            }
        }
    });
}


    </script>




{% endblock %}
