{% extends 'base.html.twig' %}

{% block title %}Liste des caméras
{% endblock %}


{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+WyVQZlZl5E/V7hRTtXxpgO9RY" crossorigin="anonymous">
	<link rel="stylesheet" type="text/css" href="https://unpkg.com/tableexport@5.0.2/dist/css/tableexport.min.css">
	<style>
		body {
		background-color: whitesmoke  !important;
		}

		#myTable {
			border: 1px white;
		}
		tr {
			border: 1px white;

		}
		.horizontal-buttons {
			display: flex;
			align-items: center;
		}

		.horizontal-buttons .dropdown-item,
		.horizontal-buttons .text-muted {
			margin-right: 10px; /* Adjust spacing between buttons */
		}
		.custom-header-bg {
			background-color: #f8f9fa; /* Custom header background color */
		}

		.custom-header {
			color: #495057; /* Custom header text color */
		}

		.price-cell {
			color: #28a745; /* Price cell text color */
		}

		.category-cell {
			color: #007bff; /* Category cell text color */
		}


		.horizontal-buttons .dropdown-item:hover,
		.horizontal-buttons .text-muted:hover {
			color: #0056b3; /* Change color on hover */
		}

		.dropdown-item i {
			color: #777; /* Default icon color */
		}

		/* Hover effect for table rows */
		tbody tr:hover {
			background-color: #f0f0f0; /* Change background color on hover */
		}

		/* Add spacing between table rows */
		tbody tr:not(:last-child) {
			margin-bottom: 10px; /* Adjust spacing between rows */
		}
	</style>
{% endblock %}

{% block body %}
	<div id="layout-wrapper">


		<div class="main-content">

			<div class="page-content">
				<div
					class="container-fluid">

					<!-- start page title -->
					<div class="row">
						<div class="col-12">
							<div class="page-title-box d-sm-flex align-items-center justify-content-between">
								<h4 class="mb-sm-0">Cameras</h4>

								<div class="page-title-right">
									<ol class="breadcrumb m-0">
										<li class="breadcrumb-item">
											<a href="javascript: void(0);">Ecommerce</a>
										</li>
										<li class="breadcrumb-item active">Camera</li>
									</ol>
								</div>

							</div>
						</div>
					</div>
					<!-- end page title -->

					<div class="row">
						<div class="col-xl-3 col-lg-4">
							<div class="card">
								<div class="card-header">
									<div class="d-flex mb-3">
										<div class="flex-grow-1">
											<h5 class="fs-16">Filters</h5>
										</div>
										<div class="flex-shrink-0">
											<a href="javascript:void(0);" onclick="clearAllFilters()">Clear All</a>

										</div>

									</div>
								</div>

								<div class="accordion accordion-flush filter-accordion">

									<div class="card-body border-bottom">
										<div>
											<label for="categorySelect">Select Category:</label>
											<select class="form-control" id="categorySelect" placeholder="Sélectionnez une catégorie">
												<option disabled selected hidden>Sélectionnez une catégorie</option>
												{% for category in categories %}
													<option value="{{ category.getNom() }}">{{ category.getNom() }}</option>
												{% endfor %}
											</select>

										</select>
									</div>
								</div>

								<div class="card-body border-bottom">
									<p class="text-muted text-uppercase fs-13 fw-medium mb-4">Prix</p>

									<div id="product-price-range"></div>
									<div class="formCost d-flex gap-2 align-items-center mt-3">
										<input class="form-control form-control-sm" type="text" id="minCost"/>
										<span class="fw-semibold text-muted">to</span>
										<input class="form-control form-control-sm" type="text" id="maxCost"/>
									</div>
								</div>

							</div>
						</div>
						<!-- end card -->
					</div>
					<!-- end col -->

					<div class="col-xl-9 col-lg-8">
						<div>
							<div class="card">
								<div class="card-header border-0">
									<div class="row g-4">
										<div class="col-sm-auto">
											<div>
												<a href="{{ path('addtest') }}" class="btn btn-success" id="addproduct-btn">
													<i class="ri-add-line align-bottom me-1"></i>
													Add Product</a>
                                                <a href="{{ path('LigneReduction') }}" class="btn btn-warning" id="addproduct-btn">
                                                        <i class="ri-add-line align-bottom me-1"></i> Add LigneReduction</a>
												<button type="button" class="btn btn-primary" onclick="confirmPrint()">
													<i class="ri-printer-line align-middle me-1"></i>
													Imprimer tableau
												</button>

												<button type="button" class="btn btn-info" onclick="confirmExport()">
													<i class="ri-file-excel-line align-middle me-1"></i>
													Exporter Excel
												</button>
												
											</div>
										</div>
										<div class="col-sm"></div>
									</div>
								</div>
								<br/>


								<div class="card-body">

									<table id="myTable" class="table">
										<thead>
											<tr class="align-middle custom-header-bg">
												<th class="custom-header text-center">Photo</th>
												<th class="custom-header text-center">Nom</th>
												<th class="custom-header text-center">Prix</th>
												<th class="custom-header text-center">Date Ajout</th>
												<th class="custom-header text-center">Statut</th>
												<th class="custom-header text-center">Stock</th>
												<th class="custom-header text-center">Catégorie</th>
												<th class="custom-header text-center">Action</th>
											</tr>
										</thead>
										<tbody>
											{% for camera in cameras %}
												<tr data-camera-id="{{ camera.id }}">
													<td>
														<div class="avatar-group">
															{% for imageCamera in camera.imageCameras %}
																<a href="javascript: void(0);" class="avatar-group-item " data-img="avatar-3.jpg" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="Username">
																	<img src="http://127.0.0.1:9000/fichier/{{imageCamera.image}}" alt="" class="rounded-circle avatar-xxs">
																</a>
															{% endfor %}
														</div>


													</td>
													<td class="align-middle text-center">{{ camera.nom }}</td>
													<td class="align-middle text-center price-cell">{{ camera.prix }}</td>
													<td class="align-middle text-center">{{ camera.dateAjout ? camera.dateAjout|date('Y-m-d') : '' }}</td>
													<td class="align-middle text-center">{{ camera.status }}</td>
													<td class="align-middle text-center">{{ camera.stock }}</td>
													<td class="align-middle text-center category-cell">{{ camera.categorie.nom }}</td>
													<td class="text-center align-middle horizontal-buttons">
														<a class="dropdown-item text-muted delete-camera-link" href="{{ path('Delete_camera',{id:camera.id}) }}">
															<i class="ri-delete-bin-line align-bottom me-2"></i>
														</a>
														<a class="text-muted" href="{{ path('Edit_camera',{id:camera.id}) }}">
															<i class="ri-pencil-line align-bottom me-2"></i>
														</a>
														<a class="text-muted" href="{{ path('camera_details', {'id': camera.id}) }}">
															<i class="ri-eye-fill align-bottom me-2"></i>
														</a>
														{# <a class="text-muted" href="#" id="uploadLink" data-bs-toggle="modal" data-bs-target="#uploadModal">
															<i class="ri-upload-line align-bottom me-2"></i>
														</a> #}


													</td>
												</tr>
											{% endfor %}
										</tbody>
									</table>


									<div class="tab-content text-muted">
										<div class="tab-pane active" id="productnav-all" role="tabpanel">
											<div id="table-product-list-all" class="table-card gridjs-border-none"></div>
										</div>
										<!-- end tab pane -->

										<div class="tab-pane" id="productnav-published" role="tabpanel">
											<div id="table-product-list-published" class="table-card gridjs-border-none"></div>
										</div>
										<!-- end tab pane -->

										<div class="noDataMessage" id="productnav-draft" role="tabpanel">
											<div class="py-4 text-center" id="noDataMessage" style="display: none;">
												<lord-icon src="https://cdn.lordicon.com/msoeawqm.json" trigger="loop" colors="primary:#405189,secondary:#0ab39c" style="width:72px;height:72px"></lord-icon>
												<h5 class="mt-4">Désolé ! Aucun résultat trouvé</h5>
											</div>
										</div>
										<!-- end tab pane -->
									</div>
									<!-- end tab content -->

								</div>
								<!-- end card body -->
							</div>
							<!-- end card -->
						</div>
					</div>
					<!-- end col -->
				</div>
				<!-- end row -->

			</div>
			<!-- container-fluid -->
		</div>
		<!-- End Page-content -->


	</div>
</div>
</div>

</div>
{% endblock %}
{% block javascripts %}
{{ parent() }}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://unpkg.com/tableexport@5.0.2/dist/js/tableexport.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
var addCameraModal = document.getElementById('addCameraModal');
var addCameraForm = document.getElementById('addCameraForm');
document.querySelector('[data-bs-target="#addCameraModal"]').addEventListener('click', function () {
var modal = new bootstrap.Modal(addCameraModal);
modal.show();
});
addCameraForm.addEventListener('submit', function (event) {
event.preventDefault(); // Empêcher le comportement de soumission par défaut
});
});
function printTable() {
var printWindow = window.open('', '_blank');
printWindow.document.open();
printWindow.document.write('<html><head><title>Print Table</title>');
printWindow.document.write('<style>');
printWindow.document.write('table {margin: auto; border-collapse: collapse; width: 80%;}');
printWindow.document.write('th, td {border: 1px solid black; padding: 8px;}');
printWindow.document.write('th {font-weight: bold; text-align: center;}');
printWindow.document.write('</style>');
printWindow.document.write('</head><body>');
printWindow.document.write('<table>');
printWindow.document.write('<thead>');
printWindow.document.write('<tr>');
printWindow.document.write('<th>Nom</th>');
printWindow.document.write('<th>Description</th>');
printWindow.document.write('<th>Prix</th>');
printWindow.document.write('<th>Date Ajout</th>');
printWindow.document.write('<th>Status</th>');
printWindow.document.write('<th>Stock</th>');
printWindow.document.write('<th>Catégorie</th>');
printWindow.document.write('</tr>');
printWindow.document.write('</thead>');
printWindow.document.write('<tbody>');

var tableRows = document.getElementById('myTable').querySelectorAll('tr');
for (var i = 0; i < tableRows.length; i++) {
var row = tableRows[i];
var rowData = row.querySelectorAll('td');
if (rowData.length > 0) {
printWindow.document.write('<tr>');
for (var j = 0; j < rowData.length; j++) {
if (j !== rowData.length - 1) {
printWindow.document.write('<td>' + rowData[j].innerText + '</td>');
}
}
printWindow.document.write('</tr>');
}
}

printWindow.document.write('</tbody>');
printWindow.document.write('</table>');
printWindow.document.write('</body></html>');
printWindow.document.close();
printWindow.print();
}


document.addEventListener('DOMContentLoaded', function () { // Sélectionnez l'élément de liste déroulante des catégories
var categorySelect = document.getElementById('categorySelect');

// Ajoutez un écouteur d'événements de changement à l'élément de liste déroulante
categorySelect.addEventListener('change', function () { // Récupérez la valeur sélectionnée dans la liste déroulante
var selectedCategory = categorySelect.value;

// Appelez la fonction pour filtrer la table par catégorie et afficher/masquer le message en conséquence
filterTableByCategory(selectedCategory);
});
});
function filterTableByCategory(categoryName) { // Récupérer la table DataTable
var table = $('#myTable').DataTable();

// Si le nom de la catégorie est "All", réinitialiser le filtre de la colonne et afficher toutes les données
if (categoryName === 'All') {
table.column(6).search('').draw();
} else { // Sinon, appliquer le filtre de la colonne pour la catégorie sélectionnée
table.column(6).search(categoryName).draw();
}
}


function exportToExcel() {
var table = document.getElementById('myTable');
var rows = table.querySelectorAll('tr');
var csvData = [];

for (var i = 0; i < rows.length; i++) {
var row = rows[i];
var rowData = [];
var cols = row.querySelectorAll('td');

for (var j = 0; j < cols.length; j++) {
rowData.push(cols[j].innerText);
}

csvData.push(rowData.join(';'));
}

var csvContent = 'data:text/csv;charset=utf-8,';
csvContent += 'Nom;Description;Prix;Date Ajout;Status;Stock;Catégorie\n';

for (var i = 0; i < csvData.length; i++) {
csvContent += csvData[i] + '\n';
}

var encodedUri = encodeURI(csvContent);
var link = document.createElement('a');
link.setAttribute('href', encodedUri);
link.setAttribute('download', 'liste_camera.csv');
document.body.appendChild(link);
link.click();
}

function openUploadPhotoModal(cameraId) {
var modal = document.getElementById('uploadPhotoModal');
var formAction = '/upload_photo/' + cameraId;
modal.querySelector('form').action = formAction;
$(modal).modal('show');
}


document.addEventListener('DOMContentLoaded', function () { // Sélectionner les éléments d'entrée pour les valeurs de prix
var minCostInput = document.getElementById('minCost');
var maxCostInput = document.getElementById('maxCost');

// Ajouter des écouteurs d'événements pour détecter les changements de valeur
minCostInput.addEventListener('input', filterTableByPrice);
maxCostInput.addEventListener('input', filterTableByPrice);
});

function filterTableByPrice() { // Récupérer les valeurs de prix minimales et maximales
var minPrice = parseFloat(document.getElementById('minCost').value);
var maxPrice = parseFloat(document.getElementById('maxCost').value);

// Sélectionner toutes les lignes du tableau
var rows = document.querySelectorAll('#myTable tbody tr');

// Variable pour indiquer si au moins une ligne est affichée
var atLeastOneRowDisplayed = false;

// Parcourir toutes les lignes du tableau
rows.forEach(function (row) { // Récupérer le prix de la caméra dans cette ligne
var cameraPrice = parseFloat(row.querySelector('.price-cell').textContent);

// Vérifier si le prix est compris dans la plage sélectionnée
if (cameraPrice >= minPrice && cameraPrice <= maxPrice) { // Afficher la ligne si le prix est dans la plage
row.style.display = '';
atLeastOneRowDisplayed = true;
} else { // Masquer la ligne si le prix n'est pas dans la plage
row.style.display = 'none';
}
});

// Afficher un message si aucune ligne n'est affichée
if (! atLeastOneRowDisplayed) {
document.getElementById('noDataMessage').style.display = 'block';
} else {
document.getElementById('noDataMessage').style.display = 'none';
}
}
function clearAllFilters() {
    // Récupérer toutes les lignes du tableau
    var tableRows = document.querySelectorAll('#myTable tbody tr');

    // Pour chaque ligne du tableau
    tableRows.forEach(function(row) {
        // Réinitialiser le style pour afficher la ligne
        row.style.display = '';
    });

    // Réinitialiser les valeurs des filtres de prix minimum et maximum à une chaîne vide
    document.getElementById('minCost').value = '';
    document.getElementById('maxCost').value = '';

    // Réappliquer le filtre pour afficher toutes les lignes
    filterTableByCategory('All');

    // Masquer le message "Aucun résultat trouvé"
    document.getElementById('noDataMessage').style.display = 'none';
}



document.addEventListener('DOMContentLoaded', function () {
document.querySelectorAll('.delete-camera-link').forEach(function (link) {
link.addEventListener('click', function (event) {
event.preventDefault(); // Empêcher le comportement par défaut du lien

Swal.fire({
title: 'Are you sure?',
text: "You won't be able to revert this!",
icon: 'warning',
showCancelButton: true,
confirmButtonColor: '#3085d6',
cancelButtonColor: '#d33',
confirmButtonText: 'Yes, delete it!'
}).then((result) => {
if (result.isConfirmed) { // Envoyer la requête de suppression via AJAX
fetch(this.getAttribute('href'), {
method: 'POST',
headers: {
'Content-Type': 'application/json',
'X-Requested-With': 'XMLHttpRequest' // Ajouter cette entête pour indiquer une requête AJAX
},
body: JSON.stringify(
{
_method: 'DELETE' // Utiliser la méthode DELETE pour Symfony
}
)
}).then(response => response.json()).then(data => {
if (data.success) {
Swal.fire('Deleted!', 'Your camera has been deleted.', 'success');
// Rediriger vers la page des caméras après la suppression
window.location.href = "{{ path('camera') }}";
} else {
Swal.fire('Error!', 'An error occurred while deleting the camera.', 'error');
}
}).catch(error => {
console.error('Error:', error);
});
}
});
});
});
});</script><script>
document.addEventListener('DOMContentLoaded', function () {
document.querySelectorAll('.delete-camera-link').forEach(function (link) {
link.addEventListener('click', function (event) {
event.preventDefault(); // Empêcher le comportement par défaut du lien

Swal.fire({
title: 'Are you sure?',
text: "You won't be able to revert this!",
icon: 'warning',
showCancelButton: true,
confirmButtonColor: '#3085d6',
cancelButtonColor: '#d33',
confirmButtonText: 'Yes, delete it!'
}).then((result) => {
if (result.isConfirmed) { // Envoyer la requête de suppression via AJAX
fetch(this.getAttribute('href'), {
method: 'DELETE',
headers: {
'Content-Type': 'application/json',
'X-Requested-With': 'XMLHttpRequest'
}
}).then(response => {
if (!response.ok) {
throw new Error('Network response was not ok');
}
return response.json();
}).then(data => {
if (data.success) {
Swal.fire('Deleted!', 'Your camera has been deleted.', 'success');
// Rediriger vers la page des caméras après la suppression
window.location.href = "{{ path('camera') }}";
} else {
Swal.fire('Error!', 'An error occurred while deleting the camera: ' + data.message, 'error');
}
}).catch(error => {
console.error('Error:', error);
Swal.fire('Error!', 'An error occurred while deleting the camera.', 'error');
});
}
});
});
});
});
function confirmPrint() {
Swal.fire({
title: 'Print Table',
text: "Are you sure you want to print the table?",
icon: 'question',
showCancelButton: true,
confirmButtonColor: '#3085d6',
cancelButtonColor: '#d33',
confirmButtonText: 'Yes, print it!'
}).then((result) => {
if (result.isConfirmed) {
printTable();
}
});
}

function confirmExport() {
Swal.fire({
title: 'Export to Excel',
text: "Are you sure you want to export the table to Excel?",
icon: 'question',
showCancelButton: true,
confirmButtonColor: '#3085d6',
cancelButtonColor: '#d33',
confirmButtonText: 'Yes, export it!'
}).then((result) => {
if (result.isConfirmed) {
exportToExcel();
}
});
}</script><script>

var selectedCameraId;
// Définition de la variable selectedCameraId

// Lorsque l'utilisateur clique sur le lien "Télécharger"
$('#uploadLink').click(function () { // Récupérez l'ID de la caméra à partir de la ligne sélectionnée
var cameraId = $(this).closest('tr').attr('data-camera-id');
// Définissez l'ID de la caméra sélectionnée
setSelectedCameraId(cameraId);
});

// Fonction pour définir l'ID de la caméra sélectionnée
function setSelectedCameraId(cameraId) {
selectedCameraId = cameraId;
}</script><script>
// Lorsque l'utilisateur clique sur le bouton "Télécharger"
$('#uploadModal').on('show.bs.modal', function (event) {
var button = $(event.relatedTarget); // Button that triggered the modal
var cameraId = button.data('camera-id'); // Extract info from data-* attributes
var modal = $(this);
modal.find('#cameraId').val(cameraId);
});</script><script>
// Lorsque le formulaire d'ajout de photo est soumis
$('#uploadForm').submit(function (event) { // Empêche le comportement par défaut du formulaire
event.preventDefault();

// Récupère les données du formulaire
var formData = new FormData(this);

// Effectue une requête AJAX pour soumettre le formulaire
$.ajax({
url: $(this).attr('action'), // URL de l'action du contrôleur pour ajouter la photo
type: 'POST',
data: formData,
processData: false,
contentType: false,
success: function (response) { // Si l'ajout de la photo réussit, ferme le modal et affiche un message de succès si nécessaire
$('#uploadModal').modal('hide');
alert('Photo ajoutée avec succès !');
},
error: function (xhr, status, error) { // Si une erreur se produit lors de l'ajout de la photo, affiche un message d'erreur
alert('Échec de l\'ajout de la photo : ' + xhr.responseText);
}
});
});</script>{% endblock %}
